{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { ref, reactive, computed, onMounted } from 'vue';\nimport axios from '@/api/axios'; // 请确保你有配置好的 axios 实例\nimport { useUserStore } from '@/api/user'; // 假设用 pinia 管理用户状态\n\nimport '../assets/css/ShoppingCart.css';\nexport default {\n  __name: 'ShoppingCart',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const userStore = useUserStore();\n    const cartItems = reactive([]);\n    const recommendedProducts = ref([]);\n    const couponCode = ref('');\n\n    // 拉取购物车接口\n    const fetchCart = async () => {\n      try {\n        const userId = userStore.user?.id;\n        if (!userId) {\n          alert('请先登录');\n          return;\n        }\n        const res = await axios.get(`/cart/${userId}`);\n        // res.data.data 是数组\n        // 转化数据，给每项默认加 selected:true\n        cartItems.splice(0); // 清空\n        res.data.data.forEach(item => {\n          cartItems.push({\n            ...item,\n            selected: true,\n            // 这里补全原价字段（如果没有，留空）\n            originalPrice: null\n          });\n        });\n      } catch (error) {\n        console.error('获取购物车失败', error);\n      }\n    };\n\n    // 拉取推荐商品（随机4个）\n    const fetchRecommendedProducts = async () => {\n      try {\n        const res = await axios.get('/products');\n        // 随机挑4个\n        const products = res.data.data || [];\n        const shuffled = products.sort(() => 0.5 - Math.random());\n        recommendedProducts.value = shuffled.slice(0, 4);\n      } catch (error) {\n        console.error('获取推荐商品失败', error);\n      }\n    };\n    onMounted(() => {\n      fetchCart();\n      fetchRecommendedProducts();\n    });\n\n    // 计算属性\n    const subtotal = computed(() => {\n      return cartItems.reduce((sum, item) => {\n        return item.selected ? sum + item.price_at_add * item.quantity : sum;\n      }, 0);\n    });\n    const shippingFee = computed(() => {\n      return subtotal.value > 200 ? 0 : 15;\n    });\n    const discount = computed(() => {\n      return subtotal.value * 0.1;\n    });\n    const total = computed(() => {\n      return subtotal.value + shippingFee.value - discount.value;\n    });\n\n    // 操作方法\n\n    const increaseQuantity = async index => {\n      const item = cartItems[index];\n      item.quantity++;\n      await updateCartItemQuantity(item);\n    };\n    const decreaseQuantity = async index => {\n      const item = cartItems[index];\n      if (item.quantity > 1) {\n        item.quantity--;\n        await updateCartItemQuantity(item);\n      }\n    };\n    const updateCartItemQuantity = async item => {\n      try {\n        await axios.put(`/cart/${item.cart_id}`, {\n          quantity: item.quantity\n        });\n      } catch (error) {\n        console.error('更新购物车商品数量失败', error);\n      }\n    };\n    const removeItem = async index => {\n      const item = cartItems[index];\n      try {\n        await axios.delete(`/cart/${item.cart_id}`);\n        cartItems.splice(index, 1);\n      } catch (error) {\n        console.error('删除购物车商品失败', error);\n      }\n    };\n    const addToCart = async product => {\n      const userId = userStore.user?.id;\n      if (!userId) {\n        alert('请先登录');\n        return;\n      }\n      try {\n        // 先调用接口添加购物车，后更新本地cartItems\n        await axios.post('/cart', {\n          cart_user_id: userId,\n          product_id: product.id,\n          quantity: 1,\n          price_at_add: product.price\n        });\n        alert(`${product.name} 已加入购物车！`);\n        fetchCart();\n      } catch (error) {\n        console.error('加入购物车失败', error);\n      }\n    };\n    const proceedToCheckout = () => {\n      const selectedItems = cartItems.filter(item => item.selected);\n      if (selectedItems.length === 0) {\n        alert(\"请选择要购买的商品\");\n        return;\n      }\n      alert(`即将跳转到结算页面，总计 ¥${total.value.toFixed(2)}`);\n    };\n\n    // 空实现，防止模板调用报错\n    const updateTotal = () => {};\n    const __returned__ = {\n      userStore,\n      cartItems,\n      recommendedProducts,\n      couponCode,\n      fetchCart,\n      fetchRecommendedProducts,\n      subtotal,\n      shippingFee,\n      discount,\n      total,\n      increaseQuantity,\n      decreaseQuantity,\n      updateCartItemQuantity,\n      removeItem,\n      addToCart,\n      proceedToCheckout,\n      updateTotal,\n      ref,\n      reactive,\n      computed,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get useUserStore() {\n        return useUserStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","axios","useUserStore","userStore","cartItems","recommendedProducts","couponCode","fetchCart","userId","user","id","alert","res","get","splice","data","forEach","item","push","selected","originalPrice","error","console","fetchRecommendedProducts","products","shuffled","sort","Math","random","value","slice","subtotal","reduce","sum","price_at_add","quantity","shippingFee","discount","total","increaseQuantity","index","updateCartItemQuantity","decreaseQuantity","put","cart_id","removeItem","delete","addToCart","product","post","cart_user_id","product_id","price","name","proceedToCheckout","selectedItems","filter","length","toFixed","updateTotal"],"sources":["D:/计算机/谭/shopping_website/src/views/ShoppingCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart-container\">\r\n    <div class=\"cart-header\">\r\n      <h1 class=\"section-title\">我的购物车</h1>\r\n      <p class=\"cart-summary\">共 {{ cartItems.length }} 件商品</p>\r\n    </div>\r\n\r\n    <div class=\"cart-content\">\r\n      <div class=\"cart-items\">\r\n        <div class=\"cart-item\" v-for=\"(item, index) in cartItems\" :key=\"item.cart_id\">\r\n          <div class=\"item-select\">\r\n            <input\r\n                type=\"checkbox\"\r\n                v-model=\"item.selected\"\r\n                @change=\"updateTotal\"\r\n                class=\"item-checkbox\"\r\n            >\r\n          </div>\r\n          <div class=\"item-image\">\r\n            <img :src=\"item.image\" :alt=\"item.name\" class=\"product-img\">\r\n          </div>\r\n          <div class=\"item-details\">\r\n            <h3 class=\"product-name\">{{ item.name }}</h3>\r\n            <!-- description 和 tags 后端无字段，删掉这两块，但不破坏布局 -->\r\n            <p class=\"product-desc\" style=\"visibility: hidden;\">描述占位</p>\r\n            <div class=\"product-tags\" style=\"height: 0; overflow: hidden;\">\r\n              <!-- 占位不显示 -->\r\n            </div>\r\n          </div>\r\n          <div class=\"item-price\">\r\n            <p class=\"price\">¥{{ item.price_at_add.toFixed(2) }}</p>\r\n            <p class=\"original-price\" v-if=\"item.originalPrice\">¥{{ item.originalPrice.toFixed(2) }}</p>\r\n          </div>\r\n          <div class=\"item-quantity\">\r\n            <button class=\"quantity-btn\" @click=\"decreaseQuantity(index)\" :disabled=\"item.quantity <= 1\">-</button>\r\n            <span class=\"quantity\">{{ item.quantity }}</span>\r\n            <button class=\"quantity-btn\" @click=\"increaseQuantity(index)\">+</button>\r\n          </div>\r\n          <div class=\"item-subtotal\">\r\n            <p class=\"subtotal\">¥{{ (item.price_at_add * item.quantity).toFixed(2) }}</p>\r\n          </div>\r\n          <div class=\"item-actions\">\r\n            <button class=\"action-btn favorite\">\r\n              <font-awesome-icon :icon=\"['fas', 'heart']\" />\r\n            </button>\r\n            <button class=\"action-btn delete\" @click=\"removeItem(index)\">\r\n              <font-awesome-icon :icon=\"['fas', 'trash']\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"cart-summary feathered-edge\">\r\n        <div class=\"summary-header\">\r\n          <h3>订单摘要</h3>\r\n        </div>\r\n        <div class=\"summary-content\">\r\n          <div class=\"summary-row\">\r\n            <span>商品小计</span>\r\n            <span>¥{{ subtotal.toFixed(2) }}</span>\r\n          </div>\r\n          <div class=\"summary-row\">\r\n            <span>运费</span>\r\n            <span>¥{{ shippingFee.toFixed(2) }}</span>\r\n          </div>\r\n          <div class=\"summary-row discount\">\r\n            <span>优惠</span>\r\n            <span>-¥{{ discount.toFixed(2) }}</span>\r\n          </div>\r\n          <div class=\"summary-divider\"></div>\r\n          <div class=\"summary-row total\">\r\n            <span>总计</span>\r\n            <span>¥{{ total.toFixed(2) }}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"coupon-section\">\r\n          <input\r\n              type=\"text\"\r\n              placeholder=\"输入优惠码\"\r\n              v-model=\"couponCode\"\r\n              class=\"coupon-input\"\r\n          >\r\n          <button class=\"coupon-btn\">应用</button>\r\n        </div>\r\n        <button class=\"btn checkout-btn\" @click=\"proceedToCheckout\">\r\n          前往结账\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"recommended-section\">\r\n      <h2 class=\"section-title\">猜你喜欢</h2>\r\n      <div class=\"recommended-products\">\r\n        <div class=\"product-card\" v-for=\"product in recommendedProducts\" :key=\"product.id\">\r\n          <div class=\"product-image\">\r\n            <img :src=\"product.image\" :alt=\"product.name\" class=\"product-img\">\r\n            <div class=\"product-tag\" v-if=\"product.tag\">{{ product.tag }}</div>\r\n          </div>\r\n          <div class=\"product-info\">\r\n            <h3 class=\"product-name\">{{ product.name }}</h3>\r\n            <p class=\"product-price\">¥{{ product.price.toFixed(2) }}</p>\r\n            <button class=\"btn add-to-cart\" @click=\"addToCart(product)\">\r\n              <i class=\"icon icon-cart\"></i> 加入购物车\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted } from 'vue';\r\nimport axios from '@/api/axios'; // 请确保你有配置好的 axios 实例\r\nimport { useUserStore } from '@/api/user'; // 假设用 pinia 管理用户状态\r\n\r\nimport '../assets/css/ShoppingCart.css';\r\n\r\nconst userStore = useUserStore();\r\n\r\nconst cartItems = reactive([]);\r\nconst recommendedProducts = ref([]);\r\nconst couponCode = ref('');\r\n\r\n// 拉取购物车接口\r\nconst fetchCart = async () => {\r\n  try {\r\n    const userId = userStore.user?.id;\r\n    if (!userId) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    const res = await axios.get(`/cart/${userId}`);\r\n    // res.data.data 是数组\r\n    // 转化数据，给每项默认加 selected:true\r\n    cartItems.splice(0); // 清空\r\n    res.data.data.forEach(item => {\r\n      cartItems.push({\r\n        ...item,\r\n        selected: true,\r\n        // 这里补全原价字段（如果没有，留空）\r\n        originalPrice: null,\r\n      });\r\n    });\r\n  } catch (error) {\r\n    console.error('获取购物车失败', error);\r\n  }\r\n};\r\n\r\n// 拉取推荐商品（随机4个）\r\nconst fetchRecommendedProducts = async () => {\r\n  try {\r\n    const res = await axios.get('/products');\r\n    // 随机挑4个\r\n    const products = res.data.data || [];\r\n    const shuffled = products.sort(() => 0.5 - Math.random());\r\n    recommendedProducts.value = shuffled.slice(0, 4);\r\n  } catch (error) {\r\n    console.error('获取推荐商品失败', error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetchCart();\r\n  fetchRecommendedProducts();\r\n});\r\n\r\n// 计算属性\r\nconst subtotal = computed(() => {\r\n  return cartItems.reduce((sum, item) => {\r\n    return item.selected ? sum + (item.price_at_add * item.quantity) : sum;\r\n  }, 0);\r\n});\r\n\r\nconst shippingFee = computed(() => {\r\n  return subtotal.value > 200 ? 0 : 15;\r\n});\r\n\r\nconst discount = computed(() => {\r\n  return subtotal.value * 0.1;\r\n});\r\n\r\nconst total = computed(() => {\r\n  return subtotal.value + shippingFee.value - discount.value;\r\n});\r\n\r\n// 操作方法\r\n\r\nconst increaseQuantity = async (index) => {\r\n  const item = cartItems[index];\r\n  item.quantity++;\r\n  await updateCartItemQuantity(item);\r\n};\r\n\r\nconst decreaseQuantity = async (index) => {\r\n  const item = cartItems[index];\r\n  if (item.quantity > 1) {\r\n    item.quantity--;\r\n    await updateCartItemQuantity(item);\r\n  }\r\n};\r\n\r\nconst updateCartItemQuantity = async (item) => {\r\n  try {\r\n    await axios.put(`/cart/${item.cart_id}`, {quantity: item.quantity});\r\n  } catch (error) {\r\n    console.error('更新购物车商品数量失败', error);\r\n  }\r\n};\r\n\r\nconst removeItem = async (index) => {\r\n  const item = cartItems[index];\r\n  try {\r\n    await axios.delete(`/cart/${item.cart_id}`);\r\n    cartItems.splice(index, 1);\r\n  } catch (error) {\r\n    console.error('删除购物车商品失败', error);\r\n  }\r\n};\r\n\r\nconst addToCart = async (product) => {\r\n  const userId = userStore.user?.id;\r\n  if (!userId) {\r\n    alert('请先登录');\r\n    return;\r\n  }\r\n  try {\r\n    // 先调用接口添加购物车，后更新本地cartItems\r\n    await axios.post('/cart', {\r\n      cart_user_id: userId,\r\n      product_id: product.id,\r\n      quantity: 1,\r\n      price_at_add: product.price,\r\n    });\r\n    alert(`${product.name} 已加入购物车！`);\r\n    fetchCart();\r\n  } catch (error) {\r\n    console.error('加入购物车失败', error);\r\n  }\r\n};\r\n\r\nconst proceedToCheckout = () => {\r\n  const selectedItems = cartItems.filter(item => item.selected);\r\n  if (selectedItems.length === 0) {\r\n    alert(\"请选择要购买的商品\");\r\n    return;\r\n  }\r\n  alert(`即将跳转到结算页面，总计 ¥${total.value.toFixed(2)}`);\r\n};\r\n\r\n// 空实现，防止模板调用报错\r\nconst updateTotal = () => {\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}