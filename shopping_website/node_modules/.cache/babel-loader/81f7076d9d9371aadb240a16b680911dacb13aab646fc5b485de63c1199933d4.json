{"ast":null,"code":"import { onMounted } from 'vue';\nimport { useProductFetch } from '@/composables/useProductFetch.js';\nimport ProductCard from '@/components/common/ProductCard.vue';\nexport default {\n  __name: 'ProductView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const {\n      products,\n      loading,\n      error,\n      fetchProducts\n    } = useProductFetch();\n    onMounted(() => {\n      fetchProducts();\n    });\n    function handleAddToCart(item) {\n      console.log('添加到购物车:', item);\n    }\n    const __returned__ = {\n      products,\n      loading,\n      error,\n      fetchProducts,\n      handleAddToCart,\n      onMounted,\n      get useProductFetch() {\n        return useProductFetch;\n      },\n      ProductCard\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","useProductFetch","ProductCard","products","loading","error","fetchProducts","handleAddToCart","item","console","log"],"sources":["D:/计算机/谭/shopping_website/src/views/ProductView.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-view\">\r\n    <h1>全部商品</h1>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <div class=\"loader\"></div>\r\n      <p>加载商品中...</p>\r\n    </div>\r\n\r\n    <!-- 错误状态 -->\r\n    <div v-else-if=\"error\" class=\"error-card\">\r\n      <h3>加载失败</h3>\r\n      <p>{{ error }}</p>\r\n      <button @click=\"fetchProducts\">重试</button>\r\n    </div>\r\n\r\n    <!-- 空状态 -->\r\n    <div v-else-if=\"products.length === 0\" class=\"empty-state\">\r\n      <p>暂无商品数据</p>\r\n    </div>\r\n\r\n    <!-- 商品列表 -->\r\n    <div v-else class=\"product-grid\">\r\n      <ProductCard\r\n          v-for=\"product in products\"\r\n          :key=\"product.id\"\r\n          :product=\"product\"\r\n          @add-to-cart=\"handleAddToCart\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {onMounted} from 'vue'\r\nimport {useProductFetch} from '@/composables/useProductFetch.js'\r\nimport ProductCard from '@/components/common/ProductCard.vue'\r\n\r\nconst {products, loading, error, fetchProducts} = useProductFetch()\r\n\r\nonMounted(() => {\r\n  fetchProducts()\r\n})\r\n\r\nfunction handleAddToCart(item) {\r\n  console.log('添加到购物车:', item)\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.product-view {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.loading-container {\r\n  text-align: center;\r\n  padding: 40px 0;\r\n}\r\n\r\n.loader {\r\n  border: 4px solid #f3f3f3;\r\n  border-top: 4px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  animation: spin 1s linear infinite;\r\n  margin: 0 auto 15px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.error-card {\r\n  background: #ffebee;\r\n  border: 1px solid #ffcdd2;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  text-align: center;\r\n  margin: 20px 0;\r\n}\r\n\r\n.error-card button {\r\n  background: #e53935;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\n.empty-state {\r\n  text-align: center;\r\n  padding: 40px 0;\r\n}\r\n\r\n.product-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 25px;\r\n  margin-top: 20px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .product-grid {\r\n    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\r\n    gap: 15px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAmCA,SAAQA,SAAS,QAAO,KAAK;AAC7B,SAAQC,eAAe,QAAO,kCAAkC;AAChE,OAAOC,WAAW,MAAM,qCAAqC;;;;;;;IAE7D,MAAM;MAACC,QAAQ;MAAEC,OAAO;MAAEC,KAAK;MAAEC;IAAa,CAAC,GAAGL,eAAe,CAAC,CAAC;IAEnED,SAAS,CAAC,MAAM;MACdM,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC;IAEF,SAASC,eAAeA,CAACC,IAAI,EAAE;MAC7BC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,IAAI,CAAC;IAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}