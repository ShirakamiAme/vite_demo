{"ast":null,"code":"import { ref } from 'vue';\nimport { getAllProducts } from '@/api/product.js';\nexport function useProductFetch() {\n  const products = ref([]);\n  const loading = ref(false);\n  const error = ref(null);\n  const fetchProducts = async () => {\n    try {\n      loading.value = true;\n      error.value = null;\n      const response = await getAllProducts();\n      console.log('完整API响应:', response); // 调试用\n\n      // 检查响应结构\n      if (Array.isArray(response)) {\n        products.value = response;\n      } else if (response && Array.isArray(response.data)) {\n        // 处理 { data: [...] } 格式\n        products.value = response.data;\n      } else if (response && response.data && Array.isArray(response.data.data)) {\n        // 处理嵌套格式 { data: { data: [...] } }\n        products.value = response.data.data;\n      } else {\n        throw new Error(`无效的API响应格式: ${typeof response}`);\n      }\n      console.log(`成功加载 ${products.value.length} 个商品`);\n    } catch (err) {\n      error.value = err.message || '获取商品失败';\n      console.error('API错误详情:', err);\n\n      // 特殊处理：如果响应是对象但不是数组\n      if (response && typeof response === 'object') {\n        console.warn('API响应内容:', response);\n      }\n    } finally {\n      loading.value = false;\n    }\n  };\n  return {\n    products,\n    loading,\n    error,\n    fetchProducts\n  };\n}","map":{"version":3,"names":["ref","getAllProducts","useProductFetch","products","loading","error","fetchProducts","value","response","console","log","Array","isArray","data","Error","length","err","message","warn"],"sources":["D:/计算机/谭/shopping_website/src/composables/useProductFetch.js"],"sourcesContent":["import { ref } from 'vue'\r\nimport { getAllProducts } from '@/api/product.js'\r\n\r\nexport function useProductFetch() {\r\n    const products = ref([])\r\n    const loading = ref(false)\r\n    const error = ref(null)\r\n\r\n    const fetchProducts = async () => {\r\n        try {\r\n            loading.value = true\r\n            error.value = null\r\n\r\n            const response = await getAllProducts()\r\n            console.log('完整API响应:', response) // 调试用\r\n\r\n            // 检查响应结构\r\n            if (Array.isArray(response)) {\r\n                products.value = response\r\n            } else if (response && Array.isArray(response.data)) {\r\n                // 处理 { data: [...] } 格式\r\n                products.value = response.data\r\n            } else if (response && response.data && Array.isArray(response.data.data)) {\r\n                // 处理嵌套格式 { data: { data: [...] } }\r\n                products.value = response.data.data\r\n            } else {\r\n                throw new Error(`无效的API响应格式: ${typeof response}`)\r\n            }\r\n\r\n            console.log(`成功加载 ${products.value.length} 个商品`)\r\n        } catch (err) {\r\n            error.value = err.message || '获取商品失败'\r\n            console.error('API错误详情:', err)\r\n\r\n            // 特殊处理：如果响应是对象但不是数组\r\n            if (response && typeof response === 'object') {\r\n                console.warn('API响应内容:', response)\r\n            }\r\n        } finally {\r\n            loading.value = false\r\n        }\r\n    }\r\n\r\n    return {\r\n        products,\r\n        loading,\r\n        error,\r\n        fetchProducts\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,SAASC,eAAeA,CAAA,EAAG;EAC9B,MAAMC,QAAQ,GAAGH,GAAG,CAAC,EAAE,CAAC;EACxB,MAAMI,OAAO,GAAGJ,GAAG,CAAC,KAAK,CAAC;EAC1B,MAAMK,KAAK,GAAGL,GAAG,CAAC,IAAI,CAAC;EAEvB,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACAF,OAAO,CAACG,KAAK,GAAG,IAAI;MACpBF,KAAK,CAACE,KAAK,GAAG,IAAI;MAElB,MAAMC,QAAQ,GAAG,MAAMP,cAAc,CAAC,CAAC;MACvCQ,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAAC,EAAC;;MAElC;MACA,IAAIG,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAAC,EAAE;QACzBL,QAAQ,CAACI,KAAK,GAAGC,QAAQ;MAC7B,CAAC,MAAM,IAAIA,QAAQ,IAAIG,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACK,IAAI,CAAC,EAAE;QACjD;QACAV,QAAQ,CAACI,KAAK,GAAGC,QAAQ,CAACK,IAAI;MAClC,CAAC,MAAM,IAAIL,QAAQ,IAAIA,QAAQ,CAACK,IAAI,IAAIF,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACK,IAAI,CAACA,IAAI,CAAC,EAAE;QACvE;QACAV,QAAQ,CAACI,KAAK,GAAGC,QAAQ,CAACK,IAAI,CAACA,IAAI;MACvC,CAAC,MAAM;QACH,MAAM,IAAIC,KAAK,CAAC,eAAe,OAAON,QAAQ,EAAE,CAAC;MACrD;MAEAC,OAAO,CAACC,GAAG,CAAC,QAAQP,QAAQ,CAACI,KAAK,CAACQ,MAAM,MAAM,CAAC;IACpD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVX,KAAK,CAACE,KAAK,GAAGS,GAAG,CAACC,OAAO,IAAI,QAAQ;MACrCR,OAAO,CAACJ,KAAK,CAAC,UAAU,EAAEW,GAAG,CAAC;;MAE9B;MACA,IAAIR,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;QAC1CC,OAAO,CAACS,IAAI,CAAC,UAAU,EAAEV,QAAQ,CAAC;MACtC;IACJ,CAAC,SAAS;MACNJ,OAAO,CAACG,KAAK,GAAG,KAAK;IACzB;EACJ,CAAC;EAED,OAAO;IACHJ,QAAQ;IACRC,OAAO;IACPC,KAAK;IACLC;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}