{"ast":null,"code":"import { ref } from 'vue';\nimport { getAllProducts } from '@/api/product.js';\nexport function useProductFetch(initialLimit = 20) {\n  const products = ref([]);\n  const loading = ref(false);\n  const error = ref(null);\n  const hasMore = ref(true);\n  const totalItems = ref(0);\n  const page = ref(1);\n  const limit = ref(initialLimit);\n  const fetchProducts = async (category = null) => {\n    if (loading.value || !hasMore.value) return;\n    let apiResponse;\n    const params = {\n      page: page.value,\n      limit: limit.value\n    };\n    if (category) {\n      params.category = category;\n    }\n    try {\n      loading.value = true;\n      error.value = null;\n      apiResponse = await getAllProducts(params);\n      console.log('API 响应:', apiResponse);\n      console.log('完整 API 响应结构:', JSON.stringify(apiResponse, null, 2));\n      let productsData = [];\n      let totalCount = 0;\n\n      // 后端标准分页格式：{ data: [...], meta: { totalItems, currentPage, totalPages } }\n      if (apiResponse && Array.isArray(apiResponse.data)) {\n        productsData = apiResponse.data;\n        totalCount = apiResponse.meta?.totalItems || 0;\n      } else if (Array.isArray(apiResponse)) {\n        productsData = apiResponse;\n        totalCount = productsData.length;\n      } else {\n        console.warn('无法识别的 API 响应格式:', apiResponse);\n        productsData = [];\n        totalCount = 0;\n      }\n      totalItems.value = totalCount;\n      if (productsData.length < limit.value) {\n        hasMore.value = false;\n      } else {\n        const remaining = totalItems.value - (products.value.length + productsData.length);\n        hasMore.value = remaining > 0;\n      }\n      products.value = [...products.value, ...productsData];\n      page.value++;\n      console.log(`加载 ${productsData.length} 个商品，总计 ${products.value.length}/${totalItems.value}`);\n      console.log(`还有更多商品: ${hasMore.value}`);\n    } catch (err) {\n      error.value = err.message || '获取商品失败';\n      console.error('API 错误详情:', err);\n      if (apiResponse) {\n        console.warn('API 响应内容:', apiResponse);\n      }\n    } finally {\n      loading.value = false;\n    }\n  };\n  const reset = () => {\n    products.value = [];\n    page.value = 1;\n    hasMore.value = true;\n    totalItems.value = 0;\n    error.value = null;\n  };\n  return {\n    products,\n    loading,\n    error,\n    hasMore,\n    totalItems,\n    fetchProducts,\n    reset\n  };\n}","map":{"version":3,"names":["ref","getAllProducts","useProductFetch","initialLimit","products","loading","error","hasMore","totalItems","page","limit","fetchProducts","category","value","apiResponse","params","console","log","JSON","stringify","productsData","totalCount","Array","isArray","data","meta","length","warn","remaining","err","message","reset"],"sources":["D:/计算机/谭/shopping_website/src/composables/useProductFetch.js"],"sourcesContent":["import { ref } from 'vue'\r\nimport { getAllProducts } from '@/api/product.js'\r\n\r\nexport function useProductFetch(initialLimit = 20) {\r\n    const products = ref([])\r\n    const loading = ref(false)\r\n    const error = ref(null)\r\n    const hasMore = ref(true)\r\n    const totalItems = ref(0)\r\n\r\n    const page = ref(1)\r\n    const limit = ref(initialLimit)\r\n\r\n    const fetchProducts = async (category = null) => {\r\n        if (loading.value || !hasMore.value) return\r\n\r\n        let apiResponse\r\n        const params = {\r\n            page: page.value,\r\n            limit: limit.value\r\n        }\r\n\r\n        if (category) {\r\n            params.category = category\r\n        }\r\n\r\n        try {\r\n            loading.value = true\r\n            error.value = null\r\n\r\n            apiResponse = await getAllProducts(params)\r\n            console.log('API 响应:', apiResponse)\r\n\r\n            console.log('完整 API 响应结构:', JSON.stringify(apiResponse, null, 2))\r\n\r\n            let productsData = []\r\n            let totalCount = 0\r\n\r\n// 后端标准分页格式：{ data: [...], meta: { totalItems, currentPage, totalPages } }\r\n            if (apiResponse && Array.isArray(apiResponse.data)) {\r\n                productsData = apiResponse.data\r\n                totalCount = apiResponse.meta?.totalItems || 0\r\n            } else if (Array.isArray(apiResponse)) {\r\n                productsData = apiResponse\r\n                totalCount = productsData.length\r\n            } else {\r\n                console.warn('无法识别的 API 响应格式:', apiResponse)\r\n                productsData = []\r\n                totalCount = 0\r\n            }\r\n\r\n\r\n            totalItems.value = totalCount\r\n\r\n            if (productsData.length < limit.value) {\r\n                hasMore.value = false\r\n            } else {\r\n                const remaining = totalItems.value - (products.value.length + productsData.length)\r\n                hasMore.value = remaining > 0\r\n            }\r\n\r\n            products.value = [...products.value, ...productsData]\r\n            page.value++\r\n\r\n            console.log(`加载 ${productsData.length} 个商品，总计 ${products.value.length}/${totalItems.value}`)\r\n            console.log(`还有更多商品: ${hasMore.value}`)\r\n\r\n        } catch (err) {\r\n            error.value = err.message || '获取商品失败'\r\n            console.error('API 错误详情:', err)\r\n            if (apiResponse) {\r\n                console.warn('API 响应内容:', apiResponse)\r\n            }\r\n        } finally {\r\n            loading.value = false\r\n        }\r\n    }\r\n\r\n    const reset = () => {\r\n        products.value = []\r\n        page.value = 1\r\n        hasMore.value = true\r\n        totalItems.value = 0\r\n        error.value = null\r\n    }\r\n\r\n    return {\r\n        products,\r\n        loading,\r\n        error,\r\n        hasMore,\r\n        totalItems,\r\n        fetchProducts,\r\n        reset\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}