{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { registerUser, loginUser } from '@/api/user.js';\nimport '../assets/css/LoginAndRegister.css';\nexport default {\n  __name: 'LoginAndRegister',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const isLogin = ref(true);\n    const showPassword = ref(false);\n    const showConfirmPassword = ref(false);\n    const rememberMe = ref(false);\n    const loading = ref(false);\n    const error = ref('');\n    const formData = reactive({\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n    const errors = reactive({\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n    const validateForm = () => {\n      Object.keys(errors).forEach(key => errors[key] = '');\n      let isValid = true;\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!formData.email || !emailRegex.test(formData.email)) {\n        errors.email = '请输入有效的邮箱地址';\n        isValid = false;\n      }\n      if (!formData.password || formData.password.length < 6) {\n        errors.password = '密码长度至少为6位';\n        isValid = false;\n      }\n      if (!isLogin.value) {\n        if (!formData.name || formData.name.length < 3) {\n          errors.name = '用户名长度至少为3位';\n          isValid = false;\n        }\n        if (formData.password !== formData.confirmPassword) {\n          errors.confirmPassword = '两次输入的密码不一致';\n          isValid = false;\n        }\n      }\n      return isValid;\n    };\n    const submitForm = async () => {\n      if (!validateForm()) return;\n      loading.value = true;\n      error.value = '';\n      try {\n        if (isLogin.value) {\n          const credentials = {\n            email: formData.email,\n            password: formData.password\n          };\n          const response = await loginUser(credentials);\n          localStorage.setItem('authToken', response.token);\n          localStorage.setItem('user', JSON.stringify(response.user));\n          alert(`登录成功，欢迎回来${response.user.user_name}`);\n          window.location.href = '/';\n          router.push('/');\n        } else {\n          const userData = {\n            user_name: formData.name,\n            email: formData.email,\n            user_password: formData.password\n          };\n          await registerUser(userData);\n          alert(`注册成功，欢迎${formData.name}`);\n          isLogin.value = true;\n        }\n        formData.name = '';\n        formData.email = '';\n        formData.password = '';\n        formData.confirmPassword = '';\n      } catch (err) {\n        console.error('认证错误:', err);\n        error.value = err.response?.data?.message || err.message || '发生未知错误，请重试';\n      } finally {\n        loading.value = false;\n      }\n    };\n    const __returned__ = {\n      router,\n      isLogin,\n      showPassword,\n      showConfirmPassword,\n      rememberMe,\n      loading,\n      error,\n      formData,\n      errors,\n      validateForm,\n      submitForm,\n      ref,\n      reactive,\n      get useRouter() {\n        return useRouter;\n      },\n      get registerUser() {\n        return registerUser;\n      },\n      get loginUser() {\n        return loginUser;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","registerUser","loginUser","router","isLogin","showPassword","showConfirmPassword","rememberMe","loading","error","formData","name","email","password","confirmPassword","errors","validateForm","Object","keys","forEach","key","isValid","emailRegex","test","length","value","submitForm","credentials","response","localStorage","setItem","token","JSON","stringify","user","alert","user_name","window","location","href","push","userData","user_password","err","console","data","message"],"sources":["D:/计算机/谭/shopping_website/src/views/LoginAndRegister.vue"],"sourcesContent":["<template>\r\n  <div class=\"auth-container\">\r\n    <div class=\"form-wrapper feathered-edge\">\r\n      <div class=\"form-header\">\r\n        <h1 class=\"app-title\"><font-awesome-icon :icon=\"['fas', 'leaf']\" />绿意生活</h1>\r\n        <h2 class=\"section-title\">{{ isLogin ? '欢迎回来' : '加入我们' }}</h2>\r\n      </div>\r\n\r\n      <div class=\"tabs\">\r\n        <button\r\n            :class=\"['tab-btn', { active: isLogin }]\"\r\n            @click=\"isLogin = true\"\r\n        >\r\n          登录\r\n        </button>\r\n        <button\r\n            :class=\"['tab-btn', { active: !isLogin }]\"\r\n            @click=\"isLogin = false\"\r\n        >\r\n          注册\r\n        </button>\r\n      </div>\r\n\r\n      <form @submit.prevent=\"submitForm\" class=\"auth-form\">\r\n        <div class=\"form-group\" v-if=\"!isLogin\">\r\n          <label for=\"name\">用户名</label>\r\n          <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              v-model=\"formData.name\"\r\n              placeholder=\"输入您的用户名\"\r\n              required\r\n              :disabled=\"loading\"\r\n          >\r\n          <span v-if=\"errors.name\" class=\"error-message\">{{ errors.name }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">邮箱</label>\r\n          <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              v-model=\"formData.email\"\r\n              placeholder=\"输入您的邮箱\"\r\n              required\r\n              :disabled=\"loading\"\r\n          >\r\n          <span v-if=\"errors.email\" class=\"error-message\">{{ errors.email }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">密码</label>\r\n          <input\r\n              :type=\"showPassword ? 'text' : 'password'\"\r\n              id=\"password\"\r\n              v-model=\"formData.password\"\r\n              placeholder=\"输入您的密码\"\r\n              required\r\n              :disabled=\"loading\"\r\n          >\r\n          <span class=\"toggle-password\" @click=\"showPassword = !showPassword\">\r\n            <font-awesome-icon :icon=\"[ 'fas', showPassword ? 'eye-slash' : 'eye' ]\" />\r\n          </span>\r\n          <span v-if=\"errors.password\" class=\"error-message\">{{ errors.password }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\" v-if=\"!isLogin\">\r\n          <label for=\"confirm-password\">确认密码</label>\r\n          <input\r\n              :type=\"showConfirmPassword ? 'text' : 'password'\"\r\n              id=\"confirm-password\"\r\n              v-model=\"formData.confirmPassword\"\r\n              placeholder=\"再次输入密码\"\r\n              required\r\n              :disabled=\"loading\"\r\n          >\r\n          <span class=\"toggle-password\" @click=\"showConfirmPassword = !showConfirmPassword\">\r\n            <font-awesome-icon :icon=\"[ 'fas', showConfirmPassword ? 'eye-slash' : 'eye' ]\" />\r\n          </span>\r\n          <span v-if=\"errors.confirmPassword\" class=\"error-message\">{{ errors.confirmPassword }}</span>\r\n        </div>\r\n\r\n        <div class=\"remember-forgot\" v-if=\"isLogin\">\r\n          <label class=\"remember-me\">\r\n            <input type=\"checkbox\" v-model=\"rememberMe\" :disabled=\"loading\">\r\n            <span>记住我</span>\r\n          </label>\r\n          <a href=\"#\" class=\"forgot-password\">忘记密码?</a>\r\n        </div>\r\n\r\n        <div v-if=\"loading\" class=\"loading-container\">\r\n          <div class=\"loader\"></div>\r\n          <p>处理中...</p>\r\n        </div>\r\n\r\n        <div v-if=\"error\" class=\"error-card\">\r\n          <p>{{ error }}</p>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn submit-btn\" :disabled=\"loading\">\r\n          {{ isLogin ? '登录' : '注册' }}\r\n        </button>\r\n\r\n        <div class=\"divider\">\r\n          <span>或</span>\r\n        </div>\r\n\r\n        <div class=\"social-login\">\r\n          <button type=\"button\" class=\"social-btn google\">\r\n            <font-awesome-icon :icon=\"['fab', 'qq']\" />\r\n            QQ登录\r\n          </button>\r\n          <button type=\"button\" class=\"social-btn facebook\">\r\n            <font-awesome-icon :icon=\"['fab', 'weixin']\" />\r\n            微信登录\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      <p class=\"toggle-form\">\r\n        {{ isLogin ? '还没有账号?' : '已有账号?' }}\r\n        <a href=\"#\" @click.prevent=\"isLogin = !isLogin\">\r\n          {{ isLogin ? '立即注册' : '立即登录' }}\r\n        </a>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { registerUser, loginUser } from '@/api/user.js';\r\n\r\nimport '../assets/css/LoginAndRegister.css'\r\n\r\nconst router = useRouter();\r\n\r\nconst isLogin = ref(true);\r\nconst showPassword = ref(false);\r\nconst showConfirmPassword = ref(false);\r\nconst rememberMe = ref(false);\r\nconst loading = ref(false);\r\nconst error = ref('');\r\n\r\nconst formData = reactive({\r\n  name: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: ''\r\n});\r\n\r\nconst errors = reactive({\r\n  name: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: ''\r\n});\r\n\r\nconst validateForm = () => {\r\n  Object.keys(errors).forEach(key => errors[key] = '');\r\n\r\n  let isValid = true;\r\n\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!formData.email || !emailRegex.test(formData.email)) {\r\n    errors.email = '请输入有效的邮箱地址';\r\n    isValid = false;\r\n  }\r\n\r\n  if (!formData.password || formData.password.length < 6) {\r\n    errors.password = '密码长度至少为6位';\r\n    isValid = false;\r\n  }\r\n\r\n  if (!isLogin.value) {\r\n    if (!formData.name || formData.name.length < 3) {\r\n      errors.name = '用户名长度至少为3位';\r\n      isValid = false;\r\n    }\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      errors.confirmPassword = '两次输入的密码不一致';\r\n      isValid = false;\r\n    }\r\n  }\r\n\r\n  return isValid;\r\n};\r\n\r\nconst submitForm = async () => {\r\n  if (!validateForm()) return;\r\n\r\n  loading.value = true;\r\n  error.value = '';\r\n\r\n  try {\r\n    if (isLogin.value) {\r\n      const credentials = {\r\n        email: formData.email,\r\n        password: formData.password\r\n      };\r\n\r\n      const response = await loginUser(credentials);\r\n\r\n      localStorage.setItem('authToken', response.token);\r\n      localStorage.setItem('user', JSON.stringify(response.user));\r\n\r\n      alert(`登录成功，欢迎回来${response.user.user_name}`);\r\n      window.location.href = '/'\r\n      router.push('/');\r\n    } else {\r\n      const userData = {\r\n        user_name: formData.name,\r\n        email: formData.email,\r\n        user_password: formData.password\r\n      };\r\n\r\n      await registerUser(userData);\r\n\r\n      alert(`注册成功，欢迎${formData.name}`);\r\n      isLogin.value = true;\r\n    }\r\n\r\n    formData.name = '';\r\n    formData.email = '';\r\n    formData.password = '';\r\n    formData.confirmPassword = '';\r\n  } catch (err) {\r\n    console.error('认证错误:', err);\r\n    error.value = err.response?.data?.message || err.message || '发生未知错误，请重试';\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}