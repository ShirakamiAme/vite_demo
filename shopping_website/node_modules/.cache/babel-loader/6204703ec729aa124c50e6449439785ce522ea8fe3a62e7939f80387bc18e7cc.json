{"ast":null,"code":"import { ref } from 'vue';\nimport { getAllProducts } from '@/api/product.js';\nexport function useProductFetch() {\n  const products = ref([]);\n  const loading = ref(false);\n  const error = ref(null);\n  const hasMore = ref(true);\n  const totalItems = ref(0);\n  const page = ref(1);\n  const limit = ref(20);\n  const fetchProducts = async (category = null) => {\n    if (loading.value || !hasMore.value) return;\n    loading.value = true;\n    error.value = null;\n    try {\n      const params = {\n        page: page.value,\n        limit: limit.value\n      };\n      if (category) {\n        params.category = category;\n      }\n      const response = await getAllProducts(params);\n      console.log('API 响应:', response);\n\n      // 兼容格式：{ data: [...], meta: { totalItems, currentPage, totalPages } }\n      let productsData = [];\n      let totalCount = 0;\n      if (response && Array.isArray(response.data) && response.meta) {\n        productsData = response.data;\n        totalCount = response.meta.totalItems;\n      } else {\n        console.warn('无法识别的 API 响应格式:', response);\n        productsData = [];\n        totalCount = 0;\n      }\n      totalItems.value = totalCount;\n\n      // 是否还有更多商品\n      if (products.value.length + productsData.length >= totalItems.value) {\n        hasMore.value = false;\n      }\n      products.value = [...products.value, ...productsData];\n      page.value++;\n      console.log(`加载 ${productsData.length} 个商品，总计 ${products.value.length}/${totalItems.value}`);\n      console.log(`还有更多商品: ${hasMore.value}`);\n    } catch (err) {\n      error.value = err.message || '获取商品失败';\n      console.error('API 错误:', err);\n    } finally {\n      loading.value = false;\n    }\n  };\n  const reset = () => {\n    products.value = [];\n    page.value = 1;\n    hasMore.value = true;\n    totalItems.value = 0;\n    error.value = null;\n  };\n  return {\n    products,\n    loading,\n    error,\n    hasMore,\n    totalItems,\n    fetchProducts,\n    reset\n  };\n}","map":{"version":3,"names":["ref","getAllProducts","useProductFetch","products","loading","error","hasMore","totalItems","page","limit","fetchProducts","category","value","params","response","console","log","productsData","totalCount","Array","isArray","data","meta","warn","length","err","message","reset"],"sources":["D:/计算机/谭/shopping_website/src/composables/useProductFetch.js"],"sourcesContent":["import { ref } from 'vue'\r\nimport { getAllProducts } from '@/api/product.js'\r\n\r\nexport function useProductFetch() {\r\n    const products = ref([])\r\n    const loading = ref(false)\r\n    const error = ref(null)\r\n    const hasMore = ref(true)\r\n    const totalItems = ref(0)\r\n\r\n    const page = ref(1)\r\n    const limit = ref(20)\r\n\r\n    const fetchProducts = async (category = null) => {\r\n        if (loading.value || !hasMore.value) return\r\n\r\n        loading.value = true\r\n        error.value = null\r\n\r\n        try {\r\n            const params = {\r\n                page: page.value,\r\n                limit: limit.value\r\n            }\r\n            if (category) {\r\n                params.category = category\r\n            }\r\n\r\n            const response = await getAllProducts(params)\r\n\r\n            console.log('API 响应:', response)\r\n\r\n            // 兼容格式：{ data: [...], meta: { totalItems, currentPage, totalPages } }\r\n            let productsData = []\r\n            let totalCount = 0\r\n\r\n            if (\r\n                response &&\r\n                Array.isArray(response.data) &&\r\n                response.meta\r\n            ) {\r\n                productsData = response.data\r\n                totalCount = response.meta.totalItems\r\n            } else {\r\n                console.warn('无法识别的 API 响应格式:', response)\r\n                productsData = []\r\n                totalCount = 0\r\n            }\r\n\r\n            totalItems.value = totalCount\r\n\r\n            // 是否还有更多商品\r\n            if (products.value.length + productsData.length >= totalItems.value) {\r\n                hasMore.value = false\r\n            }\r\n\r\n            products.value = [...products.value, ...productsData]\r\n            page.value++\r\n\r\n            console.log(`加载 ${productsData.length} 个商品，总计 ${products.value.length}/${totalItems.value}`)\r\n            console.log(`还有更多商品: ${hasMore.value}`)\r\n\r\n        } catch (err) {\r\n            error.value = err.message || '获取商品失败'\r\n            console.error('API 错误:', err)\r\n        } finally {\r\n            loading.value = false\r\n        }\r\n    }\r\n\r\n    const reset = () => {\r\n        products.value = []\r\n        page.value = 1\r\n        hasMore.value = true\r\n        totalItems.value = 0\r\n        error.value = null\r\n    }\r\n\r\n    return {\r\n        products,\r\n        loading,\r\n        error,\r\n        hasMore,\r\n        totalItems,\r\n        fetchProducts,\r\n        reset\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,SAASC,eAAeA,CAAA,EAAG;EAC9B,MAAMC,QAAQ,GAAGH,GAAG,CAAC,EAAE,CAAC;EACxB,MAAMI,OAAO,GAAGJ,GAAG,CAAC,KAAK,CAAC;EAC1B,MAAMK,KAAK,GAAGL,GAAG,CAAC,IAAI,CAAC;EACvB,MAAMM,OAAO,GAAGN,GAAG,CAAC,IAAI,CAAC;EACzB,MAAMO,UAAU,GAAGP,GAAG,CAAC,CAAC,CAAC;EAEzB,MAAMQ,IAAI,GAAGR,GAAG,CAAC,CAAC,CAAC;EACnB,MAAMS,KAAK,GAAGT,GAAG,CAAC,EAAE,CAAC;EAErB,MAAMU,aAAa,GAAG,MAAAA,CAAOC,QAAQ,GAAG,IAAI,KAAK;IAC7C,IAAIP,OAAO,CAACQ,KAAK,IAAI,CAACN,OAAO,CAACM,KAAK,EAAE;IAErCR,OAAO,CAACQ,KAAK,GAAG,IAAI;IACpBP,KAAK,CAACO,KAAK,GAAG,IAAI;IAElB,IAAI;MACA,MAAMC,MAAM,GAAG;QACXL,IAAI,EAAEA,IAAI,CAACI,KAAK;QAChBH,KAAK,EAAEA,KAAK,CAACG;MACjB,CAAC;MACD,IAAID,QAAQ,EAAE;QACVE,MAAM,CAACF,QAAQ,GAAGA,QAAQ;MAC9B;MAEA,MAAMG,QAAQ,GAAG,MAAMb,cAAc,CAACY,MAAM,CAAC;MAE7CE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,QAAQ,CAAC;;MAEhC;MACA,IAAIG,YAAY,GAAG,EAAE;MACrB,IAAIC,UAAU,GAAG,CAAC;MAElB,IACIJ,QAAQ,IACRK,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACO,IAAI,CAAC,IAC5BP,QAAQ,CAACQ,IAAI,EACf;QACEL,YAAY,GAAGH,QAAQ,CAACO,IAAI;QAC5BH,UAAU,GAAGJ,QAAQ,CAACQ,IAAI,CAACf,UAAU;MACzC,CAAC,MAAM;QACHQ,OAAO,CAACQ,IAAI,CAAC,iBAAiB,EAAET,QAAQ,CAAC;QACzCG,YAAY,GAAG,EAAE;QACjBC,UAAU,GAAG,CAAC;MAClB;MAEAX,UAAU,CAACK,KAAK,GAAGM,UAAU;;MAE7B;MACA,IAAIf,QAAQ,CAACS,KAAK,CAACY,MAAM,GAAGP,YAAY,CAACO,MAAM,IAAIjB,UAAU,CAACK,KAAK,EAAE;QACjEN,OAAO,CAACM,KAAK,GAAG,KAAK;MACzB;MAEAT,QAAQ,CAACS,KAAK,GAAG,CAAC,GAAGT,QAAQ,CAACS,KAAK,EAAE,GAAGK,YAAY,CAAC;MACrDT,IAAI,CAACI,KAAK,EAAE;MAEZG,OAAO,CAACC,GAAG,CAAC,MAAMC,YAAY,CAACO,MAAM,WAAWrB,QAAQ,CAACS,KAAK,CAACY,MAAM,IAAIjB,UAAU,CAACK,KAAK,EAAE,CAAC;MAC5FG,OAAO,CAACC,GAAG,CAAC,WAAWV,OAAO,CAACM,KAAK,EAAE,CAAC;IAE3C,CAAC,CAAC,OAAOa,GAAG,EAAE;MACVpB,KAAK,CAACO,KAAK,GAAGa,GAAG,CAACC,OAAO,IAAI,QAAQ;MACrCX,OAAO,CAACV,KAAK,CAAC,SAAS,EAAEoB,GAAG,CAAC;IACjC,CAAC,SAAS;MACNrB,OAAO,CAACQ,KAAK,GAAG,KAAK;IACzB;EACJ,CAAC;EAED,MAAMe,KAAK,GAAGA,CAAA,KAAM;IAChBxB,QAAQ,CAACS,KAAK,GAAG,EAAE;IACnBJ,IAAI,CAACI,KAAK,GAAG,CAAC;IACdN,OAAO,CAACM,KAAK,GAAG,IAAI;IACpBL,UAAU,CAACK,KAAK,GAAG,CAAC;IACpBP,KAAK,CAACO,KAAK,GAAG,IAAI;EACtB,CAAC;EAED,OAAO;IACHT,QAAQ;IACRC,OAAO;IACPC,KAAK;IACLC,OAAO;IACPC,UAAU;IACVG,aAAa;IACbiB;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}