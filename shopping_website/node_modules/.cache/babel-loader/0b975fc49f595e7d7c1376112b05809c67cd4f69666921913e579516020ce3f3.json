{"ast":null,"code":"// D:\\计算机\\谭\\shopping_website\\src\\composables\\useUserStore.js\n\nimport { ref } from 'vue';\n\n/**\r\n * 用户状态管理可组合函数\r\n */\nexport function useUserStore() {\n  // 响应式状态\n  const isLoggedIn = ref(false);\n  const username = ref('');\n  const userEmail = ref('');\n  const cartCount = ref(0);\n\n  // 初始化时从 localStorage 加载用户状态\n  function loadUserState() {\n    const savedState = localStorage.getItem('userState');\n    if (savedState) {\n      const state = JSON.parse(savedState);\n      isLoggedIn.value = state.isLoggedIn || false;\n      username.value = state.username || '';\n      userEmail.value = state.userEmail || '';\n      cartCount.value = state.cartCount || 0;\n    }\n  }\n\n  // 登录：更新状态并持久化到 localStorage\n  function login(userData) {\n    isLoggedIn.value = true;\n    username.value = userData.username || '';\n    userEmail.value = userData.email || '';\n    cartCount.value = userData.cartCount || cartCount.value;\n    saveUserState();\n  }\n\n  // 登出：清除状态和本地存储\n  function logout() {\n    isLoggedIn.value = false;\n    username.value = '';\n    userEmail.value = '';\n    cartCount.value = 0;\n    localStorage.removeItem('userState');\n    localStorage.removeItem('token');\n  }\n\n  // 持久化当前状态到 localStorage\n  function saveUserState() {\n    localStorage.setItem('userState', JSON.stringify({\n      isLoggedIn: isLoggedIn.value,\n      username: username.value,\n      userEmail: userEmail.value,\n      cartCount: cartCount.value,\n      lastLogin: new Date().toISOString()\n    }));\n  }\n\n  // 更新购物车数量（例如在添加商品后调用）\n  function updateCartCount(count) {\n    cartCount.value = count;\n    saveUserState();\n  }\n\n  // 获取完整用户信息（模拟接口请求，可替换为真实API调用）\n  async function fetchUserInfo() {\n    // 这里可以替换为实际的 API 请求\n    // 示例数据：\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve({\n          username: username.value,\n          email: userEmail.value,\n          cartCount: cartCount.value\n        });\n      }, 100);\n    });\n  }\n  return {\n    // 状态\n    isLoggedIn,\n    username,\n    userEmail,\n    cartCount,\n    // 方法\n    login,\n    logout\n  };\n}","map":{"version":3,"names":["ref","useUserStore","isLoggedIn","username","userEmail","cartCount","loadUserState","savedState","localStorage","getItem","state","JSON","parse","value","login","userData","email","saveUserState","logout","removeItem","setItem","stringify","lastLogin","Date","toISOString","updateCartCount","count","fetchUserInfo","Promise","resolve","setTimeout"],"sources":["D:/计算机/谭/shopping_website/src/composables/useUserStore.js"],"sourcesContent":["// D:\\计算机\\谭\\shopping_website\\src\\composables\\useUserStore.js\r\n\r\nimport { ref } from 'vue';\r\n\r\n/**\r\n * 用户状态管理可组合函数\r\n */\r\nexport function useUserStore() {\r\n    // 响应式状态\r\n    const isLoggedIn = ref(false);\r\n    const username = ref('');\r\n    const userEmail = ref('');\r\n    const cartCount = ref(0);\r\n\r\n    // 初始化时从 localStorage 加载用户状态\r\n    function loadUserState() {\r\n        const savedState = localStorage.getItem('userState');\r\n        if (savedState) {\r\n            const state = JSON.parse(savedState);\r\n            isLoggedIn.value = state.isLoggedIn || false;\r\n            username.value = state.username || '';\r\n            userEmail.value = state.userEmail || '';\r\n            cartCount.value = state.cartCount || 0;\r\n        }\r\n    }\r\n\r\n    // 登录：更新状态并持久化到 localStorage\r\n    function login(userData) {\r\n        isLoggedIn.value = true;\r\n        username.value = userData.username || '';\r\n        userEmail.value = userData.email || '';\r\n        cartCount.value = userData.cartCount || cartCount.value;\r\n\r\n        saveUserState();\r\n    }\r\n\r\n    // 登出：清除状态和本地存储\r\n    function logout() {\r\n        isLoggedIn.value = false;\r\n        username.value = '';\r\n        userEmail.value = '';\r\n        cartCount.value = 0;\r\n\r\n        localStorage.removeItem('userState');\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n    // 持久化当前状态到 localStorage\r\n    function saveUserState() {\r\n        localStorage.setItem('userState', JSON.stringify({\r\n            isLoggedIn: isLoggedIn.value,\r\n            username: username.value,\r\n            userEmail: userEmail.value,\r\n            cartCount: cartCount.value,\r\n            lastLogin: new Date().toISOString()\r\n        }));\r\n    }\r\n\r\n    // 更新购物车数量（例如在添加商品后调用）\r\n    function updateCartCount(count) {\r\n        cartCount.value = count;\r\n        saveUserState();\r\n    }\r\n\r\n    // 获取完整用户信息（模拟接口请求，可替换为真实API调用）\r\n    async function fetchUserInfo() {\r\n        // 这里可以替换为实际的 API 请求\r\n        // 示例数据：\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve({\r\n                    username: username.value,\r\n                    email: userEmail.value,\r\n                    cartCount: cartCount.value\r\n                });\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    return {\r\n        // 状态\r\n        isLoggedIn,\r\n        username,\r\n        userEmail,\r\n        cartCount,\r\n\r\n        // 方法\r\n        login,\r\n        logout,\r\n    };\r\n}\r\n"],"mappings":"AAAA;;AAEA,SAASA,GAAG,QAAQ,KAAK;;AAEzB;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAAA,EAAG;EAC3B;EACA,MAAMC,UAAU,GAAGF,GAAG,CAAC,KAAK,CAAC;EAC7B,MAAMG,QAAQ,GAAGH,GAAG,CAAC,EAAE,CAAC;EACxB,MAAMI,SAAS,GAAGJ,GAAG,CAAC,EAAE,CAAC;EACzB,MAAMK,SAAS,GAAGL,GAAG,CAAC,CAAC,CAAC;;EAExB;EACA,SAASM,aAAaA,CAAA,EAAG;IACrB,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACpD,IAAIF,UAAU,EAAE;MACZ,MAAMG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;MACpCL,UAAU,CAACW,KAAK,GAAGH,KAAK,CAACR,UAAU,IAAI,KAAK;MAC5CC,QAAQ,CAACU,KAAK,GAAGH,KAAK,CAACP,QAAQ,IAAI,EAAE;MACrCC,SAAS,CAACS,KAAK,GAAGH,KAAK,CAACN,SAAS,IAAI,EAAE;MACvCC,SAAS,CAACQ,KAAK,GAAGH,KAAK,CAACL,SAAS,IAAI,CAAC;IAC1C;EACJ;;EAEA;EACA,SAASS,KAAKA,CAACC,QAAQ,EAAE;IACrBb,UAAU,CAACW,KAAK,GAAG,IAAI;IACvBV,QAAQ,CAACU,KAAK,GAAGE,QAAQ,CAACZ,QAAQ,IAAI,EAAE;IACxCC,SAAS,CAACS,KAAK,GAAGE,QAAQ,CAACC,KAAK,IAAI,EAAE;IACtCX,SAAS,CAACQ,KAAK,GAAGE,QAAQ,CAACV,SAAS,IAAIA,SAAS,CAACQ,KAAK;IAEvDI,aAAa,CAAC,CAAC;EACnB;;EAEA;EACA,SAASC,MAAMA,CAAA,EAAG;IACdhB,UAAU,CAACW,KAAK,GAAG,KAAK;IACxBV,QAAQ,CAACU,KAAK,GAAG,EAAE;IACnBT,SAAS,CAACS,KAAK,GAAG,EAAE;IACpBR,SAAS,CAACQ,KAAK,GAAG,CAAC;IAEnBL,YAAY,CAACW,UAAU,CAAC,WAAW,CAAC;IACpCX,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;EACpC;;EAEA;EACA,SAASF,aAAaA,CAAA,EAAG;IACrBT,YAAY,CAACY,OAAO,CAAC,WAAW,EAAET,IAAI,CAACU,SAAS,CAAC;MAC7CnB,UAAU,EAAEA,UAAU,CAACW,KAAK;MAC5BV,QAAQ,EAAEA,QAAQ,CAACU,KAAK;MACxBT,SAAS,EAAEA,SAAS,CAACS,KAAK;MAC1BR,SAAS,EAAEA,SAAS,CAACQ,KAAK;MAC1BS,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACtC,CAAC,CAAC,CAAC;EACP;;EAEA;EACA,SAASC,eAAeA,CAACC,KAAK,EAAE;IAC5BrB,SAAS,CAACQ,KAAK,GAAGa,KAAK;IACvBT,aAAa,CAAC,CAAC;EACnB;;EAEA;EACA,eAAeU,aAAaA,CAAA,EAAG;IAC3B;IACA;IACA,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC5BC,UAAU,CAAC,MAAM;QACbD,OAAO,CAAC;UACJ1B,QAAQ,EAAEA,QAAQ,CAACU,KAAK;UACxBG,KAAK,EAAEZ,SAAS,CAACS,KAAK;UACtBR,SAAS,EAAEA,SAAS,CAACQ;QACzB,CAAC,CAAC;MACN,CAAC,EAAE,GAAG,CAAC;IACX,CAAC,CAAC;EACN;EAEA,OAAO;IACH;IACAX,UAAU;IACVC,QAAQ;IACRC,SAAS;IACTC,SAAS;IAET;IACAS,KAAK;IACLI;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}