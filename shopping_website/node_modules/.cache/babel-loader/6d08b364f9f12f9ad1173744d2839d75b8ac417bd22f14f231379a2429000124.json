{"ast":null,"code":"import { ref } from 'vue';\nimport { getAllProducts } from '@/api/product.js';\nexport function useProductFetch() {\n  const products = ref([]);\n  const loading = ref(false);\n  const error = ref(null);\n  const fetchProducts = async () => {\n    try {\n      console.log('[useProductFetch] 开始获取商品数据');\n      loading.value = true;\n      error.value = null;\n\n      // 直接调用API函数\n      const response = await getAllProducts();\n      console.log('[useProductFetch] 获取商品成功', response);\n      if (!Array.isArray(response)) {\n        throw new Error(`无效的API响应: 期望数组但得到 ${typeof response}`);\n      }\n      products.value = response;\n      console.log(`[useProductFetch] 成功加载 ${response.length} 个商品`);\n    } catch (err) {\n      console.error('[useProductFetch] 获取商品失败', err);\n      error.value = err.message || '获取商品数据失败';\n\n      // 特殊处理未定义路径错误\n      if (err.message.includes('undefined')) {\n        error.value = 'API路径配置错误: 检测到未定义路径';\n      }\n    } finally {\n      loading.value = false;\n    }\n  };\n  return {\n    products,\n    loading,\n    error,\n    fetchProducts\n  };\n}","map":{"version":3,"names":["ref","getAllProducts","useProductFetch","products","loading","error","fetchProducts","console","log","value","response","Array","isArray","Error","length","err","message","includes"],"sources":["D:/计算机/谭/shopping_website/src/composables/useProductFetch.js"],"sourcesContent":["import { ref } from 'vue'\r\nimport { getAllProducts } from '@/api/product.js'\r\n\r\nexport function useProductFetch() {\r\n    const products = ref([])\r\n    const loading = ref(false)\r\n    const error = ref(null)\r\n\r\n    const fetchProducts = async () => {\r\n        try {\r\n            console.log('[useProductFetch] 开始获取商品数据')\r\n            loading.value = true\r\n            error.value = null\r\n\r\n            // 直接调用API函数\r\n            const response = await getAllProducts()\r\n            console.log('[useProductFetch] 获取商品成功', response)\r\n\r\n            if (!Array.isArray(response)) {\r\n                throw new Error(`无效的API响应: 期望数组但得到 ${typeof response}`)\r\n            }\r\n\r\n            products.value = response\r\n            console.log(`[useProductFetch] 成功加载 ${response.length} 个商品`)\r\n        } catch (err) {\r\n            console.error('[useProductFetch] 获取商品失败', err)\r\n            error.value = err.message || '获取商品数据失败'\r\n\r\n            // 特殊处理未定义路径错误\r\n            if (err.message.includes('undefined')) {\r\n                error.value = 'API路径配置错误: 检测到未定义路径'\r\n            }\r\n        } finally {\r\n            loading.value = false\r\n        }\r\n    }\r\n\r\n    return {\r\n        products,\r\n        loading,\r\n        error,\r\n        fetchProducts\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,SAASC,eAAeA,CAAA,EAAG;EAC9B,MAAMC,QAAQ,GAAGH,GAAG,CAAC,EAAE,CAAC;EACxB,MAAMI,OAAO,GAAGJ,GAAG,CAAC,KAAK,CAAC;EAC1B,MAAMK,KAAK,GAAGL,GAAG,CAAC,IAAI,CAAC;EAEvB,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzCJ,OAAO,CAACK,KAAK,GAAG,IAAI;MACpBJ,KAAK,CAACI,KAAK,GAAG,IAAI;;MAElB;MACA,MAAMC,QAAQ,GAAG,MAAMT,cAAc,CAAC,CAAC;MACvCM,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEE,QAAQ,CAAC;MAEjD,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;QAC1B,MAAM,IAAIG,KAAK,CAAC,qBAAqB,OAAOH,QAAQ,EAAE,CAAC;MAC3D;MAEAP,QAAQ,CAACM,KAAK,GAAGC,QAAQ;MACzBH,OAAO,CAACC,GAAG,CAAC,0BAA0BE,QAAQ,CAACI,MAAM,MAAM,CAAC;IAChE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVR,OAAO,CAACF,KAAK,CAAC,0BAA0B,EAAEU,GAAG,CAAC;MAC9CV,KAAK,CAACI,KAAK,GAAGM,GAAG,CAACC,OAAO,IAAI,UAAU;;MAEvC;MACA,IAAID,GAAG,CAACC,OAAO,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;QACnCZ,KAAK,CAACI,KAAK,GAAG,qBAAqB;MACvC;IACJ,CAAC,SAAS;MACNL,OAAO,CAACK,KAAK,GAAG,KAAK;IACzB;EACJ,CAAC;EAED,OAAO;IACHN,QAAQ;IACRC,OAAO;IACPC,KAAK;IACLC;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}